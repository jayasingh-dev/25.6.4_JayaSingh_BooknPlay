// Code Generated by Sidekick is for learning and experimentation purposes only.
package com.codewithprojects.springsecurity.services;

import com.codewithprojects.springsecurity.dto.TurfRequestDto;
import com.codewithprojects.springsecurity.dto.TurfResponseDto;
import com.codewithprojects.springsecurity.entities.Turf;
import com.codewithprojects.springsecurity.entities.User;
import com.codewithprojects.springsecurity.repository.TurfRepository;
import com.codewithprojects.springsecurity.repository.UserRepository;
import lombok.RequiredArgsConstructor;
import org.springframework.security.access.AccessDeniedException;
import org.springframework.stereotype.Service;

@Service
@RequiredArgsConstructor
public class TurfService {

    private final TurfRepository turfRepository;
    private final UserRepository userRepository;

    public TurfResponseDto createTurfForOwner(TurfRequestDto dto, String username) {
        User owner = userRepository.findByEmail(username)
                .orElseThrow(() -> new RuntimeException("Owner not found"));

        Turf turf = Turf.builder()
                .name(dto.getName())
                .location(dto.getLocation())
                .sportsSupported(dto.getSportsSupported())
                .pricePerHour(dto.getPricePerHour())
                .availableSlots(dto.getAvailableSlots())
                .status(dto.getStatus())
                .owner(owner)
                .build();

        Turf saved = turfRepository.save(turf);

        return TurfResponseDto.builder()
                .id(saved.getId())
                .name(saved.getName())
                .location(saved.getLocation())
                .sportsSupported(saved.getSportsSupported())
                .pricePerHour(saved.getPricePerHour())
                .availableSlots(saved.getAvailableSlots())
                .status(saved.getStatus())
                .ownerId(saved.getOwner().getId())
                .build();
    }
}
